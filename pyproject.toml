[tool.poetry]
name = "eff-mobile-barter"
version = "0.1.0"
description = "Barter platform project"
authors = ["timofeybaev1988@gmail.com"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
django = "5.2"
python-dotenv = "^1.1.1"
pillow = "^11.3.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.1"
pytest = "^8.0.0"
pytest-django = "^4.8.0"
pytest-cov = "^4.1.0"
factory-boy = "^3.3.0"
mimesis = "^18.0.0"
mypy = "^1.16.1"
django-stubs = "^5.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = ["migrations", "__pycache__", "venv", ".venv", "env"]

[tool.ruff.lint]
select = [
    "A",     # flake8-builtins
    "AIR",   # Airflow
    "ANN",   # flake8-annotations
    "ARG",   # flake8-unused-arguments
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "BLE",   # flake8-blind-except
    "C4",    # flake8-comprehensions
    "C90",   # McCabe
    # "COM",   # flake8-commas (includes COM812)
    "CPY",  # flake8-copyright
    "D",    # flake8-docstrings/pydocstyle
    "DJ",   # flake8-django
    "DOC",  # pydoclint
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle Error
    "EM",   # flake8-errmsg
    "ERA",  # flake8-eradicate
    "EXE",  # flake8-executable
    "F",    # PyFlakes
    "FA",   # flake8-future-annotations
    "FAST", # FastAPI
    "FBT",  # flake8-boolean-trap
    "FIX",  # flake8-fixme
    "FLY",  # flynt
    "FURB", # Refurb
    "G",    # flake8-logging-format
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "INP",  # flake8-no-pep420
    "INT",  # flake8-gettext
    "ISC",  # flake8-implicit-str-concat
    "LOG",  # flake8-logging
    "N",    # pep8-naming
    "NPY",  # NumPy-specific rules
    "PD",   # pandas-vet
    "PERF", # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PT",   # flake8-pytest-style
    # "PTH",  # flake8-use-pathlib
    "PYI",  # flake8-pyi
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    # "RUF",  # Ruff-specific rules
    "S",    # flake8-bandit
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "SLOT", # flake8-slots
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TC",   # flake8-type-checking (corrected from TCH)
    "TD",   # flake8-todos
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",   # PyUpgrade
    "W",    # pycodestyle Warning
    "YTT",  # flake8-2020
]
ignore = ["E501", "E203", "D"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "S105", "S311"]
"manage.py" = ["ALL"]

[[tool.mypy.overrides]]
module = "barter_app.models"
disable_error_code = "var-annotated"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "barter_project.settings"
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
testpaths = ["tests"]
addopts = "--create-db --no-migrations --cov=barter_app --cov-report=term-missing"
